---
/**
 * * pricing sections with toggle for monthly or yearly payments
 * This is designed for 4 pricing items, but can be modified to support more
 */

import { Icon } from "astro-icon/components";


interface pricingItem {
    name: string; // plan name
    description: string; // plan description
    comingSoon?: boolean; // if true, will be highlighted or otherwise comingSoon
    price: {
        custom?: boolean; // if true, will show "contact us" instead of price
        monthly?: number; // monthly price if paid by month
        yearly?: number; // monthly price if paid by year
    };
    features: string[]; // list of features
}

// This is designed for 4 pricing items, but can be modified to support more
const pricingData: pricingItem[] = [
    {
        name: "Basic",
        description: "Free to use",
        price: {
            monthly: 0,
            yearly: 0,
        },
        features: [
            "Bring your own LLM API keys",
            "Run models locally",
            "Interactive code cells",
            "Save as markdown",
        ],
    },
    {
        name: "Premium",
        description: "Access to premium features",
        comingSoon: true,
        price: {
            monthly: 20,
            yearly: 15,
        },
        features: [
            "All features from basic",
            "Premium models access",
            "No API keys required",
            "Personal notes wiki",
            "Persist state between sessions",
        ],
    },
    {
        name: "Hosting",
        description: "Host beautiful websites with ease",
        comingSoon: true,
        price: {
            monthly: 15,
            yearly: 10,
        },
        features: [
            "All features from basic",
            "Generate a beautiful blog",
            "Generate beautiful docs",
            "Analytics for site usage",
            "Hot reload while developing",
        ],
    },
    {
        name: "Legendary",
        comingSoon: true,
        description: "Special support for legendary users",
        price: {
            monthly: 50,
            yearly: 40,
        },
        features: [
            "Unlock all features!",
            "Premium support",
            "Request new language support",
        ],
    },
];
---

<section id="pricing" class="my-24 overflow-hidden md:my-36">
    <div class="relative mx-auto px-4">
        <div class="flex justify-center">
            <p class="colored-title inline">Pricing</p>
        </div>
        <h2 class="h2 mt-8 text-center">Free to use, pay for premium features</h2>

        <!-- Toggle switch for monthly or yearly pricing -->
        <div class="mt-6 flex justify-center">
            <label
                for="pricing-plan__toggle"
                class="relative inline-flex cursor-pointer select-none items-center"
            >
                <input
                    type="checkbox"
                    name="pricing-plan__toggle"
                    id="pricing-plan__toggle"
                    class="pricing-plan__toggle sr-only"
                    aria-label="Toggle between monthly and yearly pricing"
                />
                <span class="label flex items-center text-sm">Monthly</span>
                <span
                    class="pricing-plan__slider mx-4 flex h-7 w-[56px] items-center rounded-full border border-base-300 bg-base-100 p-1 duration-200 dark:border-base-600/60 dark:bg-base-800"
                >
                    <span
                        class="pricing-plan__dot h-5 w-5 rounded-full bg-base-800 duration-200 dark:bg-base-100"
                    ></span>
                </span>
                <span class="label flex items-center text-sm">Yearly</span>
            </label>
        </div>

        <!-- works for 3 pricing plans, adjust grid and max-w here to support more or less -->
        <div
            class="mx-auto mt-12 grid w-full max-w-7xl gap-6 sm:grid-cols-2 xl:grid-cols-4"
        >
            {
                pricingData.map((plan) => (
                    // pricing cards
                    <div
                        class="pricing-plan relative mx-auto h-full w-full max-w-sm overflow-hidden rounded-2xl"
                        class:list={[
                            {
                                "bg-gradient-to-br from-primary-400 to-base-300 to-40% dark:from-primary-500 dark:to-base-600/60":
                                    plan.comingSoon === true,
                            },
                            {
                                "bg-base-300 dark:bg-base-600/60":
                                    plan.comingSoon !== true,
                            },
                        ]}
                    >
                        <div class="relative h-full p-px">
                            <div class="relative z-10 flex h-full flex-col overflow-hidden rounded-[calc(1rem-1px)] bg-base-200 dark:bg-base-800">
                                {plan.comingSoon === true && (
                                    // inside card glow for comingSoon
                                    <div
                                        class="absolute left-0 top-0 -z-10 mx-auto aspect-square w-full max-w-7xl -translate-x-1/2 -translate-y-1/2 rounded-full bg-primary-300/40 blur-3xl dark:bg-primary-600/20"
                                        aria-hidden="true"
                                    />
                                )}
                                <div class="mx-auto flex h-full w-full max-w-[20rem] flex-col px-6 pb-6">
                                    <div class="flex w-full justify-between pt-6">
                                        <h3
                                            class:list={[
                                                "text-lg font-semibold",
                                                {
                                                    "main-text-gradient":
                                                        plan.comingSoon === true,
                                                },
                                            ]}
                                        >
                                            {plan.name}
                                        </h3>
                                        {plan.comingSoon === true && (
                                            // comingSoon tag
                                            <div class="flex w-full items-center justify-end">
                                                <div class="flex gap-2 rounded-full bg-primary-600 px-3 py-1 text-sm text-base-100">
                                                    <p class="flex items-center">
                                                        Coming Soon
                                                    </p>
                                                </div>
                                            </div>
                                        )}
                                    </div>
                                    <div class="pt-3">
                                        <p class="opacity-90 dark:opacity-80">
                                            {plan.description}
                                        </p>
                                        <p class="mt-3 font-semibold">
                                            {plan.price.custom === true ? (
                                                // if custom price, show "contact us" instead of price
                                                <span class="text-5xl font-semibold text-primary-600 dark:text-primary-400">
                                                    Custom
                                                </span>
                                            ) : (
                                                <>
                                                    <div class="pricing-plan__monthly-price">
                                                        <span class="text-5xl font-semibold text-primary-600 dark:text-primary-400 font-sans">
                                                            ${plan.price.monthly}
                                                        </span>
                                                        <span class="text-3xl">
                                                            /mo
                                                        </span>
                                                    </div>
                                                    <div class="pricing-plan__yearly-price hidden">
                                                        <span class="text-5xl font-semibold text-primary-600 dark:text-primary-400">
                                                            ${plan.price.yearly}
                                                        </span>
                                                        <span class="text-3xl">
                                                            /mo
                                                        </span>
                                                    </div>
                                                </>
                                            )}
                                        </p>
                                    </div>
                                    <ul class="my-6 flex w-full flex-col gap-2">
                                        {plan.features.map((feature) => (
                                            <li
                                                class:list={[
                                                    "flex items-center",
                                                    {
                                                        "opacity-90 dark:opacity-80":
                                                            plan.comingSoon !==
                                                            true,
                                                    },
                                                ]}
                                            >
                                                <Icon
                                                    name="tabler:check"
                                                    class="h-5 w-5 text-primary-600 dark:text-primary-400"
                                                    aria-hidden="true"
                                                />
                                                <span class="ml-2 inline">
                                                    {feature}
                                                </span>
                                            </li>
                                        ))}
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                ))
            }
        </div>
    </div>
</section>

<script>
    function pricingPlanToggleSetup() {
        // toggle between monthly and yearly pricing
        const pricingToggle = document.querySelector(
            ".pricing-plan__toggle",
        ) as HTMLInputElement;

        const pricingToggleSlider = document.querySelector(
            ".pricing-plan__slider",
        ) as HTMLInputElement;

        const pricingToggleDot = document.querySelector(
            ".pricing-plan__dot",
        ) as HTMLInputElement;

        // each pricing plan has a monthly price and a yearly price
        const pricingPlans = document.querySelectorAll(
            ".pricing-plan",
        ) as NodeListOf<HTMLElement>;

        // each plan has monthly and yearly price
        pricingPlans.forEach((pricingPlan) => {
            const monthlyPrice = pricingPlan.querySelector(
                ".pricing-plan__monthly-price",
            ) as HTMLElement;

            const yearlyPrice = pricingPlan.querySelector(
                ".pricing-plan__yearly-price",
            ) as HTMLElement;

            if (
                pricingToggle &&
                pricingToggleDot &&
                pricingToggleSlider &&
                monthlyPrice &&
                yearlyPrice
            ) {
                pricingToggle.addEventListener("change", (event) => {
                    if (pricingToggle.checked) {
                        // if checked, then yearly price
                        monthlyPrice.classList.add("hidden");
                        yearlyPrice.classList.remove("hidden");
                        pricingToggleDot.classList.add("translate-x-[26px]");
                        pricingToggleSlider.classList.add("border-primary-400");
                        pricingToggleSlider.classList.add(
                            "dark:border-primary-600",
                        );
                    } else {
                        // if unchecked, then monthly price
                        monthlyPrice.classList.remove("hidden");
                        yearlyPrice.classList.add("hidden");
                        pricingToggleDot.classList.remove("translate-x-[26px]");
                        pricingToggleSlider.classList.remove(
                            "border-primary-400",
                        );
                        pricingToggleSlider.classList.remove(
                            "dark:border-primary-600",
                        );
                    }
                });
            }
        });
    }

    // runs on initial page load
    pricingPlanToggleSetup();

    // runs on view transitions navigation
    document.addEventListener("astro:after-swap", pricingPlanToggleSetup);
</script>
